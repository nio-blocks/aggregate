{
  "nio/Aggregate": {
    "version": "0.1.1",
    "description": "The Aggregate block takes an attribute from the incoming signal and emits a signal containing the attribute's average, count, max, min, and sum.  The attribute should be a list of numbers.",
    "categories": [
      "Signal Inspection"
    ],
    "properties": {
      "group_by": {
        "title": "Group By",
        "type": "Type",
        "description": "Attribute to group signals by. A different output signal will be produced for each group.",
        "default": null
      },
      "value": {
        "title": "Aggregate Input Value",
        "type": "Type",
        "description": "The value for each signal to use in the computations.",
        "default": "{{ $value }}"
      }
    },
    "inputs": {
      "default": {
        "description": "Any list of signals with numeric values."
      }
    },
    "outputs": {
      "default": {
        "description": "The computed sum, average, count, minimum, and maximum for the list of values specified."
      }
    },
    "commands": {
      "groups": {
        "description": "Returns a list of the block’s current signal groupings.",
        "params": {}
      }
    }
  },
  "nio/AggregateStream": {
    "version": "0.1.1",
    "description": "The AggregateStream block calculates the same statistics as the [Aggregate](https://blocks.n.io/Aggregate) block, but rather than using a single signal's list, it uses an attribute that is a number and calculates the stats over the configured **averaging interval**.",
    "categories": [
      "Signal Inspection"
    ],
    "properties": {
      "averaging_interval": {
        "title": "Averaging Interval",
        "type": "TimeDeltaType",
        "description": "What period of time to compute the averages/count/min/max/sum for. This is a 'trailing' field, so setting it to 24 hours will always notify information about the *trailing* 24 hours.",
        "default": {
          "seconds": 5
        }
      },
      "backup_interval": {
        "title": "Backup Interval",
        "type": "TimeDeltaType",
        "description": "An interval of time that specifies how often persisted data is saved.",
        "default": {
          "seconds": 3600
        }
      },
      "group_by": {
        "title": "Group By",
        "type": "Type",
        "description": "The signal attribute on the incoming signal whose values will be used to define groups on the outgoing signal.",
        "default": null
      },
      "load_from_persistence": {
        "title": "Load from Persistence?",
        "type": "BoolType",
        "description": "If `True`, the block’s state will be saved when the block is stopped, and reloaded once the block is restarted.",
        "default": true
      },
      "report_interval": {
        "title": "Report Interval",
        "type": "TimeDeltaType",
        "description": "How often to emit signals from this block. Note that signals are not emitted based on incoming signals, but rather this time interval.",
        "default": {
          "seconds": 1
        }
      },
      "value": {
        "title": "Aggregate Input Value",
        "type": "Type",
        "description": "The value for each signal to use in the computations.",
        "default": "{{ $value }}"
      }
    },
    "inputs": {
      "default": {
        "description": "Any list of signals with numeric values."
      }
    },
    "outputs": {
      "default": {
        "description": "The computed sum, average, count, minimum, and maximum for the incoming data stream over the specified interval."
      }
    },
    "commands": {
      "groups": {
        "description": "Returns a list of the block’s current signal groupings.",
        "params": {}
      }
    }
  }
}
